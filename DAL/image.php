<?php
/*
Author:			This code was generated by DALGen version 1.1.0.0 available at https://github.com/H0r53/DALGen 
Date:			12/23/2017
Description:	Creates the DAL class for  image table and respective stored procedures

*/



class Image {

	// This is for local purposes only! In hosted environments the db_settings.php file should be outside of the webroot, such as: include("/outside-webroot/db_settings.php");
	protected static function getDbSettings() { return "DAL/db_localsettings.php"; }

	/******************************************************************/
	// Properties
	/******************************************************************/

	protected $Id;
	protected $Name;
	protected $Description;
	protected $ImgUrl;
	protected $EventId;
	protected $Views;
	protected $IsFeaturedImage;


	/******************************************************************/
	// Constructors
	/******************************************************************/
	public function __construct() {
		$argv = func_get_args();
		switch( func_num_args() ) {
			case 0:
				self::__constructBase();
				break;
			case 1:
				self::__constructPK( $argv[0] );
				break;
			case 7:
				self::__constructFull( $argv[0], $argv[1], $argv[2], $argv[3], $argv[4], $argv[5], $argv[6] );
		}
	}


	public function __constructBase() {
		$this->Id = 0;
		$this->Name = "";
		$this->Description = "";
		$this->ImgUrl = "";
		$this->EventId = 0;
		$this->Views = 0;
		$this->IsFeaturedImage = 0;
	}


	public function __constructPK($paramId) {
		$this->load($paramId);
	}


	public function __constructFull($paramId,$paramName,$paramDescription,$paramImgUrl,$paramEventId,$paramViews,$paramIsFeaturedImage) {
		$this->Id = $paramId;
		$this->Name = $paramName;
		$this->Description = $paramDescription;
		$this->ImgUrl = $paramImgUrl;
		$this->EventId = $paramEventId;
		$this->Views = $paramViews;
		$this->IsFeaturedImage = $paramIsFeaturedImage;
	}


	/******************************************************************/
	// Accessors / Mutators
	/******************************************************************/

	public function getId(){
		return $this->Id;
	}
	public function setId($value){
		$this->Id = $value;
	}
	public function getName(){
		return $this->Name;
	}
	public function setName($value){
		$this->Name = $value;
	}
	public function getDescription(){
		return $this->Description;
	}
	public function setDescription($value){
		$this->Description = $value;
	}
	public function getImgUrl(){
		return $this->ImgUrl;
	}
	public function setImgUrl($value){
		$this->ImgUrl = $value;
	}
	public function getEventId(){
		return $this->EventId;
	}
	public function setEventId($value){
		$this->EventId = $value;
	}
	public function getViews(){
		return $this->Views;
	}
	public function setViews($value){
		$this->Views = $value;
	}
	public function getIsFeaturedImage(){
		return $this->IsFeaturedImage;
	}
	public function setIsFeaturedImage($value){
		$this->IsFeaturedImage = $value;
	}


	/******************************************************************/
	// Public Methods
	/******************************************************************/


	public function load($paramId) {
		include(self::getDbSettings());
		$conn = new mysqli($servername, $username, $password, $dbname);
		$stmt = $conn->prepare('CALL usp_image_Load(?)');
		$stmt->bind_param('i', $paramId);
		$stmt->execute();

		$result = $stmt->get_result();
		if (!$result) die($conn->error);

		while ($row = $result->fetch_assoc()) {
		 $this->setId($row['Id']);
		 $this->setName($row['Name']);
		 $this->setDescription($row['Description']);
		 $this->setImgUrl($row['ImgUrl']);
		 $this->setEventId($row['EventId']);
		 $this->setViews($row['Views']);
		 $this->setIsFeaturedImage($row['IsFeaturedImage']);
		}
	}


	public function save() {
		if ($this->getId() == 0)
			$this->insert();
		else
			$this->update();
	}

	/******************************************************************/
	// Private Methods
	/******************************************************************/



	private function insert() {
		include(self::getDbSettings());
		$conn = new mysqli($servername, $username, $password, $dbname);
		$stmt = $conn->prepare('CALL usp_image_Add(?,?,?,?,?,?)');
		$arg1 = $this->getName();
		$arg2 = $this->getDescription();
		$arg3 = $this->getImgUrl();
		$arg4 = $this->getEventId();
		$arg5 = $this->getViews();
		$arg6 = $this->getIsFeaturedImage();
		$stmt->bind_param('sssiii',$arg1,$arg2,$arg3,$arg4,$arg5,$arg6);
		$stmt->execute();

		$result = $stmt->get_result();
		if (!$result) die($conn->error);
		while ($row = $result->fetch_assoc()) {
			// By default, the DALGen generated INSERT procedure returns the scope identity as id
			$this->load($row['id']);
		}
	}


	private function update() {
		include(self::getDbSettings());
		$conn = new mysqli($servername, $username, $password, $dbname);
		$stmt = $conn->prepare('CALL usp_image_Update(?,?,?,?,?,?,?)');
		$arg1 = $this->getId();
		$arg2 = $this->getName();
		$arg3 = $this->getDescription();
		$arg4 = $this->getImgUrl();
		$arg5 = $this->getEventId();
		$arg6 = $this->getViews();
		$arg7 = $this->getIsFeaturedImage();
		$stmt->bind_param('isssiii',$arg1,$arg2,$arg3,$arg4,$arg5,$arg6,$arg7);
		$stmt->execute();
	}

	private static function setNullValue($value){
		if ($value == "")
			return null;
		else
			return $value;
	}

	/******************************************************************/
	// Static Methods
	/******************************************************************/



	public static function loadall() {
		include(self::getDbSettings());
		$conn = new mysqli($servername, $username, $password, $dbname);
		$stmt = $conn->prepare('CALL usp_image_LoadAll()');
		$stmt->execute();

		$result = $stmt->get_result();
		if (!$result) die($conn->error);
		if ($result->num_rows > 0) {
			$arr = array();
			while ($row = $result->fetch_assoc()) {
				$image = new Image($row['Id'],$row['Name'],$row['Description'],$row['ImgUrl'],$row['EventId'],$row['Views'],$row['IsFeaturedImage']);
				$arr[] = $image;
			}
			return $arr;
		}
		else {
			//die("The query yielded zero results.No rows found.");
		}
	}


	public static function remove($paramId) {
		include(self::getDbSettings());
		$conn = new mysqli($servername, $username, $password, $dbname);
		$stmt = $conn->prepare('CALL usp_image_Delete(?)');
		$stmt->bind_param('i', $paramId);
		$stmt->execute();
	}


	public static function search($paramId,$paramName,$paramDescription,$paramImgUrl,$paramEventId,$paramViews,$paramIsFeaturedImage) {
		include(self::getDbSettings());
		$conn = new mysqli($servername, $username, $password, $dbname);
		$stmt = $conn->prepare('CALL usp_image_Search(?,?,?,?,?,?,?)');
		$arg1 = Image::setNullValue($paramId);
		$arg2 = Image::setNullValue($paramName);
		$arg3 = Image::setNullValue($paramDescription);
		$arg4 = Image::setNullValue($paramImgUrl);
		$arg5 = Image::setNullValue($paramEventId);
		$arg6 = Image::setNullValue($paramViews);
		$arg7 = Image::setNullValue($paramIsFeaturedImage);
		$stmt->bind_param('isssiii',$arg1,$arg2,$arg3,$arg4,$arg5,$arg6,$arg7);
		$stmt->execute();

		$result = $stmt->get_result();
		if (!$result) die($conn->error);
		if ($result->num_rows > 0) {
			$arr = array();
			while ($row = $result->fetch_assoc()) {
				$image = new Image($row['Id'],$row['Name'],$row['Description'],$row['ImgUrl'],$row['EventId'],$row['Views'],$row['IsFeaturedImage']);
				$arr[] = $image;
			}
			return $arr;
		}
		else {
			//die("The query yielded zero results.No rows found.");
		}
	}
    public static function loadbyeventid($paramEventId) {
        include(self::getDbSettings());
        $conn = new mysqli($servername, $username, $password, $dbname);
        $stmt = $conn->prepare('CALL usp_image_LoadByEventId(?)');
        $stmt->bind_param('i', $paramEventId);
        $stmt->execute();
        $result = $stmt->get_result();
        if (!$result) die($conn->error);
        if ($result->num_rows > 0) {
            $arr = array();
            while ($row = $result->fetch_assoc()) {
                $image = new Image($row['Id'],$row['Name'],$row['Description'],$row['ImgUrl'],$row['EventId'],$row['Views'],$row['IsFeaturedImage']);
                $arr[] = $image;
            }
            return $arr;
        }
        else {
            //echo "The query yielded zero results.No rows found.";
        }
    }
}
