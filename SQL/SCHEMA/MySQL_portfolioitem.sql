/*
Author:			This code was generated by DALGen version 1.1.0.0 available at https://github.com/H0r53/DALGen 
Date:			1/4/2018
Description:	Creates the portfolioitem table and respective stored procedures

*/


USE businesstemplate;



-- ------------------------------------------------------------
-- Drop existing objects
-- ------------------------------------------------------------

DROP TABLE IF EXISTS `businesstemplate`.`portfolioitem`;
DROP PROCEDURE IF EXISTS `businesstemplate`.`usp_portfolioitem_Load`;
DROP PROCEDURE IF EXISTS `businesstemplate`.`usp_portfolioitem_LoadAll`;
DROP PROCEDURE IF EXISTS `businesstemplate`.`usp_portfolioitem_Add`;
DROP PROCEDURE IF EXISTS `businesstemplate`.`usp_portfolioitem_Update`;
DROP PROCEDURE IF EXISTS `businesstemplate`.`usp_portfolioitem_Delete`;
DROP PROCEDURE IF EXISTS `businesstemplate`.`usp_portfolioitem_Search`;


-- ------------------------------------------------------------
-- Create table
-- ------------------------------------------------------------



CREATE TABLE `businesstemplate`.`portfolioitem` (
Id INT AUTO_INCREMENT,
Name VARCHAR(255),
Description VARCHAR(1025),
ProjectUrl VARCHAR(512),
ImageUrl VARCHAR(1025),
PortfolioCategoryId INT,
CreateDate DATETIME,
CONSTRAINT pk_portfolioitem_Id PRIMARY KEY (Id),
CONSTRAINT fk_portfolioitem_CategoryId_portfoliocategory_Id FOREIGN KEY (PortfolioCategoryId) REFERENCES portfoliocategory (Id)
);


-- ------------------------------------------------------------
-- Create default SCRUD sprocs for this table
-- ------------------------------------------------------------


DELIMITER //
CREATE PROCEDURE `businesstemplate`.`usp_portfolioitem_Load`
(
	 IN paramId INT
)
BEGIN
	SELECT
		`portfolioitem`.`Id` AS `Id`,
		`portfolioitem`.`Name` AS `Name`,
		`portfolioitem`.`Description` AS `Description`,
		`portfolioitem`.`ProjectUrl` AS `ProjectUrl`,
		`portfolioitem`.`ImageUrl` AS `ImageUrl`,
		`portfolioitem`.`PortfolioCategoryId` AS `PortfolioCategoryId`,
		`portfolioitem`.`CreateDate` AS `CreateDate`
	FROM `portfolioitem`
	WHERE 		`portfolioitem`.`Id` = paramId;
END //
DELIMITER ;

DELIMITER //
CREATE PROCEDURE `businesstemplate`.`usp_portfolioitem_LoadAll`
()
BEGIN
	SELECT
		`portfolioitem`.`Id` AS `Id`,
		`portfolioitem`.`Name` AS `Name`,
		`portfolioitem`.`Description` AS `Description`,
		`portfolioitem`.`ProjectUrl` AS `ProjectUrl`,
		`portfolioitem`.`ImageUrl` AS `ImageUrl`,
		`portfolioitem`.`PortfolioCategoryId` AS `PortfolioCategoryId`,
		`portfolioitem`.`CreateDate` AS `CreateDate`
	FROM `portfolioitem`;
END //
DELIMITER ;

DELIMITER //
CREATE PROCEDURE `businesstemplate`.`usp_portfolioitem_Add`
(
	 IN paramName VARCHAR(255),
	 IN paramDescription VARCHAR(1025),
	 IN paramProjectUrl VARCHAR(512),
	 IN paramImageUrl VARCHAR(1025),
	 IN paramPortfolioCategoryId INT,
	 IN paramCreateDate DATETIME
)
BEGIN
	INSERT INTO `portfolioitem` (Name,Description,ProjectUrl,ImageUrl,PortfolioCategoryId,CreateDate)
	VALUES (paramName, paramDescription, paramProjectUrl, paramImageUrl, paramPortfolioCategoryId, paramCreateDate);
	-- Return last inserted ID as result
	SELECT LAST_INSERT_ID() as id;
END //
DELIMITER ;


DELIMITER //
CREATE PROCEDURE `businesstemplate`.`usp_portfolioitem_Update`
(
	IN paramId INT,
	IN paramName VARCHAR(255),
	IN paramDescription VARCHAR(1025),
	IN paramProjectUrl VARCHAR(512),
	IN paramImageUrl VARCHAR(1025),
	IN paramPortfolioCategoryId INT,
	IN paramCreateDate DATETIME
)
BEGIN
	UPDATE `portfolioitem`
	SET Name = paramName
		,Description = paramDescription
		,ProjectUrl = paramProjectUrl
		,ImageUrl = paramImageUrl
		,PortfolioCategoryId = paramPortfolioCategoryId
		,CreateDate = paramCreateDate
	WHERE		`portfolioitem`.`Id` = paramId;
END //
DELIMITER ;


DELIMITER //
CREATE PROCEDURE `businesstemplate`.`usp_portfolioitem_Delete`
(
	IN paramId INT
)
BEGIN
	DELETE FROM `portfolioitem`
	WHERE		`portfolioitem`.`Id` = paramId;
END //
DELIMITER ;


DELIMITER //
CREATE PROCEDURE `businesstemplate`.`usp_portfolioitem_Search`
(
	IN paramId INT,
	IN paramName VARCHAR(255),
	IN paramDescription VARCHAR(1025),
	IN paramProjectUrl VARCHAR(512),
	IN paramImageUrl VARCHAR(1025),
	IN paramPortfolioCategoryId INT,
	IN paramCreateDate DATETIME
)
BEGIN
	SELECT
		`portfolioitem`.`Id` AS `Id`,
		`portfolioitem`.`Name` AS `Name`,
		`portfolioitem`.`Description` AS `Description`,
		`portfolioitem`.`ProjectUrl` AS `ProjectUrl`,
		`portfolioitem`.`ImageUrl` AS `ImageUrl`,
		`portfolioitem`.`PortfolioCategoryId` AS `PortfolioCategoryId`,
		`portfolioitem`.`CreateDate` AS `CreateDate`
	FROM `portfolioitem`
	WHERE
		COALESCE(portfolioitem.`Id`,0) = COALESCE(paramId,portfolioitem.`Id`,0)
		AND COALESCE(portfolioitem.`Name`,'') = COALESCE(paramName,portfolioitem.`Name`,'')
		AND COALESCE(portfolioitem.`Description`,'') = COALESCE(paramDescription,portfolioitem.`Description`,'')
		AND COALESCE(portfolioitem.`ProjectUrl`,'') = COALESCE(paramProjectUrl,portfolioitem.`ProjectUrl`,'')
		AND COALESCE(portfolioitem.`ImageUrl`,'') = COALESCE(paramImageUrl,portfolioitem.`ImageUrl`,'')
		AND COALESCE(portfolioitem.`PortfolioCategoryId`,'') = COALESCE(paramPortfolioCategoryId,portfolioitem.`PortfolioCategoryId`,'')
		AND COALESCE(CAST(portfolioitem.`CreateDate` AS DATE), CAST(NOW() AS DATE)) = COALESCE(CAST(paramCreateDate AS DATE),CAST(portfolioitem.`CreateDate` AS DATE), CAST(NOW() AS DATE));
END //
DELIMITER ;


